<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- <mapper namespace="studentNS"> -->
<mapper namespace="myspring.user.dao.mapper.StudentMapper">

	<resultMap id="studentDeptResultMap" type="Student">
		<id property="id" column="stu_id" javaType="Integer" jdbcType="NUMERIC" />
		<result property="name" column="stu_name" javaType="String"
			jdbcType="VARCHAR" />
		<result property="age" column="stu_age" javaType="Integer"
			jdbcType="NUMERIC" />
		<result property="grade" column="stu_grade" javaType="String"
			jdbcType="VARCHAR" />
		<result property="daynight" column="stu_daynight" javaType="String"
			jdbcType="VARCHAR" />
		<association property="dept" column="dept_id" javaType="Dept"
			resultMap="deptResultMap" />
	</resultMap>
			
	<resultMap id="studentCourseStatusResultMap" type="Student">
		<id property="id" column="stu_id" javaType="Integer" jdbcType="NUMERIC" />
		<result property="name" column="stu_name" javaType="String"
			jdbcType="VARCHAR" />
		<result property="age" column="stu_age" javaType="Integer"
			jdbcType="NUMERIC" />
		<result property="grade" column="stu_grade" javaType="String"
			jdbcType="VARCHAR" />
		<result property="daynight" column="stu_daynight" javaType="String"
			jdbcType="VARCHAR" />
		<collection property="courseStatus" ofType="CourseStatus" 
			resultMap="coursestatusResultMap" />			
	</resultMap>
	
	<resultMap id="studentResultMap" type="Student">
		<id property="id" column="stu_id" javaType="Integer" jdbcType="NUMERIC" />
		<result property="name" column="stu_name" javaType="String"
			jdbcType="VARCHAR" />
		<result property="age" column="stu_age" javaType="Integer"
			jdbcType="NUMERIC" />
		<result property="grade" column="stu_grade" javaType="String"
			jdbcType="VARCHAR" />
		<result property="daynight" column="stu_daynight" javaType="String"
			jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="deptResultMap" type="Dept">
		<id property="deptid" column="dept_id" javaType="Integer" jdbcType="NUMERIC" />
		<result property="deptname" column="dept_name" javaType="String"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="courseResultMap" type="Course">
		<id property="courseId" column="course_id" javaType="Integer"
			jdbcType="NUMERIC" />
		<result property="courseName" column="course_name" javaType="String"
			jdbcType="VARCHAR" />
		<result property="courseInstructor" column="course_instructor"
			javaType="String" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="coursestatusResultMap" type="CourseStatus">
		<id property="statusId" column="status_id" javaType="Integer"
			jdbcType="NUMERIC" />
		<result property="courseScore" column="course_score" javaType="Integer"
			jdbcType="NUMERIC" />
		<association property="course" column="course_id" javaType="Course"
			resultMap="courseResultMap" />
	</resultMap>

	<select id="selectStudentDeptById" resultMap="studentDeptResultMap">
		select s.stu_id,
		s.stu_name,
		s.stu_age,
		s.stu_grade,
		s.stu_daynight,
		d.dept_id,
		d.dept_name
		from student s, dept d
		where s.dept_id = d.dept_id
	</select>

	<select id="selectStudentCourseStatusById" resultMap="studentCourseStatusResultMap">
		select  s.stu_id,
		        s.stu_name,
		        s.stu_age,
		        s.stu_grade,
		        s.stu_daynight,
		        c.course_id,
		        c.course_name,
		        c.course_instructor,
		        t.status_id,
		        t.COURSE_SCORE
		from  SCOTT.student s, SCOTT.COURSE_STATUS t, scott.course c
		where s.stu_id = t.stu_id
		  and t.course_id = c.course_id
	</select>
	<select id="selectStudentByName" parameterType="String"
		resultMap="studentResultMap">
		<include refid="selectStudent" />
		where stu_name like '%' || #{value} || '%'
	</select>

	<select id="selectStudentByGradeorDay2" parameterType="Student"
		resultMap="studentResultMap">
		<include refid="selectStudent" />
		<where>
			<if test="grade != null">
				stu_grade = #{grade}
			</if>
			<if test="daynight != null">
				and stu_daynight = #{daynight}
			</if>
		</where>
	</select>

	<select id="selectStudentByGradeorDay" parameterType="Map"
		resultMap="studentResultMap">
		<include refid="selectStudent" />
		<where>
			<if test="grade != null">
				stu_grade = #{grade}
			</if>
			<if test="day != null">
				or stu_daynight = #{day}
			</if>
		</where>
	</select>

	<sql id="selectStudent">
		select * from student
	</sql>

	<select id="selectStudentGrade" resultType="integer">
		select count(*) cnt
		from STUDENT
		group by grade
	</select>

	<!-- Student : 등록하려는 입력데이터를 저장하고 있는 StudentVO 객체이다. -->
	<!-- VO객체에 저장되어있는 데이터를 꺼내 써야하므로 getid, getname, getage, getgrade, ...이다. -->
	<!-- dept.deptid는  getDept().getDeptid()를 의미한다.-->
	<insert id="insertStudent" parameterType="Student">
		insert into student
		(stu_id,stu_name,stu_age,stu_grade,stu_daynight,dept_id)
		values(
		#{id}, 
		#{name},
		#{age},
		#{grade},#{daynight},#{dept.deptid} )
	</insert>

	<update id="updateStudent" parameterType="Student">
		update student set
		stu_name = #{name},
		stu_age = #{age},
		stu_grade = #{grade},
		stu_daynight
		= #{daynight},
		dept_id = #{dept.deptid}
		where stu_id = #{id}
	</update>

	<insert id="insertCourseStatus" parameterType="CourseStatus">
		insert into COURSE_STATUS 
		(STATUS_ID,STU_ID,COURSE_ID,COURSE_SCORE)
		values (
		#{statusId},
		#{student.id},
		#{course.courseId},
		#{courseScore})
	</insert>
	
	<!-- <delete id="deleteStudent" parameterType="Integer"> -->
	<!-- delete from student where id = #{value} -->
	<!-- </delete> -->

</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 